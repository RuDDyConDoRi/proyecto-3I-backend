/*
 * Created on 15 jul 2018 ( Time 15:07:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a composite Primary Key  


package com.ctr.iii.dominio;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "casoagra"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="casoagra", catalog="plaproc" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CasoAgra.countAll", query="SELECT COUNT(x) FROM CasoAgra x" )
} )
public class CasoAgra implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
	@EmbeddedId
    private CasoAgraKey compositePrimaryKey ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="agravante", length=50)
    private String     agravante    ;

    @Column(name="valoracion")
    private Integer    valoracion   ;

    @Column(name="tiempo")
    private Integer    tiempo       ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="codCas", referencedColumnName="codCas", insertable=false, updatable=false)
    private Caso caso        ;

    @ManyToOne
    @JoinColumn(name="codDdo", referencedColumnName="codPer", insertable=false, updatable=false)
    private Persona persona     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CasoAgra() {
		super();
		this.compositePrimaryKey = new CasoAgraKey();       
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------
    public void setCodCas( String codCas ) {
        this.compositePrimaryKey.setCodCas( codCas ) ;
    }
    public String getCodCas() {
        return this.compositePrimaryKey.getCodCas() ;
    }
    public void setCodDdo( String codDdo ) {
        this.compositePrimaryKey.setCodDdo( codDdo ) ;
    }
    public String getCodDdo() {
        return this.compositePrimaryKey.getCodDdo() ;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : agravante ( VARCHAR ) 
    public void setAgravante( String agravante ) {
        this.agravante = agravante;
    }
    public String getAgravante() {
        return this.agravante;
    }

    //--- DATABASE MAPPING : valoracion ( INT ) 
    public void setValoracion( Integer valoracion ) {
        this.valoracion = valoracion;
    }
    public Integer getValoracion() {
        return this.valoracion;
    }

    //--- DATABASE MAPPING : tiempo ( INT ) 
    public void setTiempo( Integer tiempo ) {
        this.tiempo = tiempo;
    }
    public Integer getTiempo() {
        return this.tiempo;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setCaso( Caso caso ) {
        this.caso = caso;
    }
    public Caso getCaso() {
        return this.caso;
    }

    public void setPersona( Persona persona ) {
        this.persona = persona;
    }
    public Persona getPersona() {
        return this.persona;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        if ( compositePrimaryKey != null ) {  
            sb.append(compositePrimaryKey.toString());  
        }  
        else {  
            sb.append( "(null-key)" ); 
        }  
        sb.append("]:"); 
        sb.append(agravante);
        sb.append("|");
        sb.append(valoracion);
        sb.append("|");
        sb.append(tiempo);
        return sb.toString(); 
    } 

}

/*
 * Created on 15 jul 2018 ( Time 15:07:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.ctr.iii.dominio;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "caso"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="caso", catalog="plaproc" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Caso.countAll", query="SELECT COUNT(x) FROM Caso x" )
} )
public class Caso implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="codCas", nullable=false, length=15)
    private String     codCas       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    /*@Column(name="codDdo", length=5)
    private String     codDdo       ;*/

    @Column(name="delito", length=100)
    private String     delito       ;

    @Column(name="nroArt")
    private Integer    nroArt       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fechaIni")
    private Date       fechaIni     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fechaFin")
    private Date       fechaFin     ;

	// "codDte" (column "codDte") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="caso", targetEntity=Prueba.class)
    private List<Prueba> pruebas     ;

    @ManyToOne
    @JoinColumn(name="codDte", referencedColumnName="codPer")
    private Persona denunciante     ;

    @ManyToOne
    @JoinColumn(name="codDdo", referencedColumnName="codPer")
    private Persona denunciado     ;
    
    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Caso() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCodCas( String codCas ) {
        this.codCas = codCas ;
    }
    public String getCodCas() {
        return this.codCas;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    
    //--- DATABASE MAPPING : delito ( VARCHAR ) 
    public void setDelito( String delito ) {
        this.delito = delito;
    }
    public String getDelito() {
        return this.delito;
    }

    //--- DATABASE MAPPING : nroArt ( INT ) 
    public void setNroArt( Integer nroArt ) {
        this.nroArt = nroArt;
    }
    public Integer getNroArt() {
        return this.nroArt;
    }

    //--- DATABASE MAPPING : fechaIni ( DATETIME ) 
    public void setFechaIni( Date fechaIni ) {
        this.fechaIni = fechaIni;
    }
    public Date getFechaIni() {
        return this.fechaIni;
    }

    //--- DATABASE MAPPING : fechaFin ( DATETIME ) 
    public void setFechaFin( Date fechaFin ) {
        this.fechaFin = fechaFin;
    }
    public Date getFechaFin() {
        return this.fechaFin;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setPruebas( List<Prueba> pruebas ) {
        this.pruebas = pruebas;
    }
    public List<Prueba> getPruebas() {
        return this.pruebas;
    }

    public void setDenunciante( Persona denunciante ) {
        this.denunciante = denunciante;
    }
    public Persona getDenunciante() {
        return this.denunciante;
    }
    
    public void setDenunciado( Persona denunciado ) {
        this.denunciado = denunciado;
    }
    public Persona getDenunciado() {
        return this.denunciado;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(codCas);
        sb.append("]:"); 
        sb.append(delito);
        sb.append("|");
        sb.append(nroArt);
        sb.append("|");
        sb.append(fechaIni);
        sb.append("|");
        sb.append(fechaFin);
        return sb.toString(); 
    } 

}

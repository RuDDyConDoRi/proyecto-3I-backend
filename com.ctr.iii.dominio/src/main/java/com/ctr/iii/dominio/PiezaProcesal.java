/*
 * Created on 15 jul 2018 ( Time 15:07:24 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.ctr.iii.dominio;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "piezaprocesal"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="piezaprocesal", catalog="plaproc" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PiezaProcesal.countAll", query="SELECT COUNT(x) FROM PiezaProcesal x" )
} )
public class PiezaProcesal implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="nroPie", nullable=false)
    private Integer    nroPie       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="nombre", length=100)
    private String     nombre       ;

    @Column(name="descr", length=200)
    private String     descr        ;

    @Column(name="documento", length=20)
    private String     documento    ;

	// "nroFuente" (column "nroFuente") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="nroFuente", referencedColumnName="nroFue")
    private Fuente fuente      ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PiezaProcesal() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setNroPie( Integer nroPie ) {
        this.nroPie = nroPie ;
    }
    public Integer getNroPie() {
        return this.nroPie;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : nombre ( VARCHAR ) 
    public void setNombre( String nombre ) {
        this.nombre = nombre;
    }
    public String getNombre() {
        return this.nombre;
    }

    //--- DATABASE MAPPING : descr ( VARCHAR ) 
    public void setDescr( String descr ) {
        this.descr = descr;
    }
    public String getDescr() {
        return this.descr;
    }

    //--- DATABASE MAPPING : documento ( VARCHAR ) 
    public void setDocumento( String documento ) {
        this.documento = documento;
    }
    public String getDocumento() {
        return this.documento;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setFuente( Fuente fuente ) {
        this.fuente = fuente;
    }
    public Fuente getFuente() {
        return this.fuente;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(nroPie);
        sb.append("]:"); 
        sb.append(nombre);
        sb.append("|");
        sb.append(descr);
        sb.append("|");
        sb.append(documento);
        return sb.toString(); 
    } 

}
